////////////////////////////////////////////////////////////////////////////////
// Filename: texture.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture;
SamplerState SampleType;

cbuffer OverlayColorBuffer
{
	float4 overlayColor;
};

cbuffer ColorBuffer
{
	float4 color;
};

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{
	float4 textureColor;

    // Sample the pixel color from the texture using the sampler at this texture coordinate location.
    textureColor = shaderTexture.Sample(SampleType, input.tex);

	if (textureColor.a <= 0.01f) {
		discard;
	}

	// Add color to the texture
	textureColor = textureColor * color;

	// Add overlay color to the texture
	textureColor.r = textureColor.r * (1 - overlayColor.a) + overlayColor.r * overlayColor.a;
	textureColor.g = textureColor.g * (1 - overlayColor.a) + overlayColor.g * overlayColor.a;
	textureColor.b = textureColor.b * (1 - overlayColor.a) + overlayColor.b * overlayColor.a;

    return textureColor;
}
